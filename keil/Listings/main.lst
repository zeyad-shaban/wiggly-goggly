A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: F:\Kiel\C51\BIN\A51.EXE ..\code\main.asm SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\Obje
                      cts\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;----------------------------------------------------------
                       2     ; Project: Ultrasonic Echo Timer Measurement
                       3     ; Clock  : 11.0592 MHz
                       4     ; UART   : 9600 baud
                       5     ; UART output = raw TH0/TL0 count of ECHO pulse width
                       6     ;----------------------------------------------------------
                       7     
  0091                 8     US_TRIG_R   EQU  P1.1    ; Right Trigger pin
  0090                 9     US_ECHO_R   EQU  P1.0    ; Right Echo pin
  00A0                10     LED0 EQU P2.0; 10cm
  00A1                11     LED1 EQU P2.1; 20cm
  00A2                12     LED2 EQU P2.2; 30cm
  00A3                13     LED3 EQU P2.3; 40cm
  00A4                14     LED4 EQU P2.4; 50cm
  00A5                15     LED5 EQU P2.5; 60cm
  00A6                16     LED6 EQU P2.6; 70cm
  00A7                17     LED7 EQU P2.7; >70cm
                      18     
  0093                19     LED_OUT EQU P1.3;out of range
                      20     
  0095                21     LCD_RS      EQU  P1.5
  0096                22     LCD_RW      EQU  P1.6
  0097                23     LCD_EN      EQU  P1.7
  00B0                24     LCD_DATA    EQU  P3
                      25     
                      26     
0000                  27     ORG 0000h
0000 0200A7           28     LJMP START 
                      29     
                      30     ;=======================
                      31     ; LCD SUB_ROUTINES
                      32     ;=======================
                      33     
0003                  34     LCD_DELAY:
0003 79FF             35         MOV R1, #255
0005 7AFF             36     DL1: MOV R2, #255
0007 DAFE             37     DL2: DJNZ R2, DL2
0009 D9FA             38          DJNZ R1, DL1
000B 22               39          RET
                      40     
000C                  41     LCD_CMD: ; to send LCD commands 
000C C295             42         CLR LCD_RS
000E C296             43         CLR LCD_RW
0010 D297             44         SETB LCD_EN
0012 F5B0             45         MOV LCD_DATA, A
0014 1103             46         ACALL LCD_DELAY
0016 C297             47         CLR LCD_EN
0018 22               48         RET
                      49     
0019                  50     LCD_DATA_WRITE:
0019 D295             51         SETB LCD_RS
001B C296             52         CLR LCD_RW
001D D297             53         SETB LCD_EN
001F F5B0             54         MOV LCD_DATA, A
0021 C297             55         CLR LCD_EN
0023 22               56         RET
                      57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     2

0024                  58     LCD_INIT:
0024 7438             59         MOV A, #38H     ; 8-bit, 2-line
0026 110C             60         ACALL LCD_CMD
0028 740E             61         MOV A, #0EH     ; Display ON, Cursor ON
002A 110C             62         ACALL LCD_CMD
002C 7401             63         MOV A, #01H     ; Clear display
002E 110C             64         ACALL LCD_CMD
0030 7406             65         MOV A, #06H     ; Entry mode
0032 110C             66         ACALL LCD_CMD
0034 22               67         RET
                      68     
                      69     ; )NOTE: must move value you wish to print into register DPTR)
0035                  70     LCD_SEND_STRING:
0035 E4               71         CLR A
0036 93               72         MOVC A, @A+DPTR
0037 6005             73         JZ LCD_STRING_DONE
0039 1119             74         ACALL LCD_DATA_WRITE
003B A3               75         INC DPTR
003C 80F7             76         SJMP LCD_SEND_STRING
003E                  77     LCD_STRING_DONE:
003E 22               78         RET
                      79     
003F                  80     LCD_CLEAR:
003F 7401             81         MOV   A,#01h             ; Clear-Display command
0041 110C             82         ACALL LCD_CMD            ; sends it
0043 1103             83         ACALL LCD_DELAY          ; yields plenty of time (> 1.6 ms)
0045 22               84         RET
                      85     
                      86     ;----------------------------------------------------------
                      87     ;  LCD_SEND_DECIMAL  – prints an 8-bit value in A (0-255)
                      88     ; )NOTE: must move value you wish to print into register A)
                      89     ;----------------------------------------------------------
0046                  90     LCD_SEND_DECIMAL:
0046 75F064           91         MOV     B,#100          ; 1)  hundreds
0049 84               92         DIV     AB              ;    A = hundreds, B = 0-99 remainder
004A FC               93         MOV     R4,A            ;    save hundreds
004B E5F0             94         MOV     A,B             ; 2)  tens / ones
004D 75F00A           95         MOV     B,#10
0050 84               96         DIV     AB              ;    A = tens, B = ones
0051 FD               97         MOV     R5,A
0052 AEF0             98         MOV     R6,B
                      99     
                     100         ; -------- print hundreds if non-zero ---------------
0054 EC              101         MOV     A,R4
0055 6004            102         JZ      SKIP_HUNDREDS
0057 2430            103         ADD     A,#'0'
0059 1119            104         ACALL   LCD_DATA_WRITE
005B                 105     SKIP_HUNDREDS:
                     106         ; -------- print tens (always if hundreds shown) ----
005B ED              107         MOV     A,R5
005C 6006            108         JZ      SKIP_TENS
005E 2430            109         ADD     A,#'0'
0060 1119            110         ACALL   LCD_DATA_WRITE
0062 8009            111         SJMP    PRINT_ONES
0064                 112     SKIP_TENS:
                     113         ; if both hundreds and tens were zero, we still need one ‘0’
0064 EC              114         MOV     A,R4
0065 7006            115         JNZ     PRINT_ONES      ; already printed a hundreds digit
0067 7430            116         MOV     A,#'0'          ; value was 0-9, so show a single 0
0069 1119            117         ACALL   LCD_DATA_WRITE
006B 8005            118         SJMP    DONE_DEC
006D                 119     PRINT_ONES:
006D EE              120         MOV     A,R6
006E 2430            121         ADD     A,#'0'
0070 1119            122         ACALL   LCD_DATA_WRITE
0072                 123     DONE_DEC:
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     3

0072 22              124         RET
                     125     
0073                 126     LCD_SEND_HEX:      ;send values to R6 first
0073 F5F0            127         MOV B, A
0075 C4              128         SWAP A
0076 540F            129         ANL A, #0Fh
0078 1185            130         ACALL HEX_TO_ASCII
007A 1119            131         ACALL LCD_DATA_WRITE
                     132     
007C E5F0            133         MOV A, B
007E 540F            134         ANL A, #0Fh
0080 1185            135         ACALL HEX_TO_ASCII
0082 1119            136         ACALL LCD_DATA_WRITE
0084 22              137         RET
                     138     
                     139     ;----------------------------------------------------------
                     140     ;  HEX_TO_ASCII  – expects 0-15 in A, returns ‘0’…‘F’ in A (uses a ROM look-up 
                             so it’s always right)
                     141     ;----------------------------------------------------------
0085                 142     HEX_TO_ASCII:
0085 C082            143         PUSH    DPL             ; keep caller’s DPTR safe
0087 C083            144         PUSH    DPH
0089 9001A5          145         MOV     DPTR,#HEX_TAB   ; point to table
008C 93              146         MOVC    A,@A+DPTR       ; fetch the correct character
008D D083            147         POP     DPH
008F D082            148         POP     DPL
0091 22              149         RET
                     150     
                     151     ;----------------------------------------------------------
                     152     ; Delay ≈ 500 µs
0092                 153     DELAY_500US:
0092 7A05            154         MOV R2, #5
0094 7B28            155     L1: MOV R3, #40
0096 00              156     L2: NOP
0097 DBFD            157         DJNZ R3, L2
0099 DAF9            158         DJNZ R2, L1
009B 22              159         RET
                     160     
                     161     ;----------------------------------------------------------
                     162     ; Delay ≈10 µs
009C                 163     DELAY_10US:
009C 00              164         NOP
009D 00              165         NOP
009E 00              166         NOP
009F 00              167         NOP
00A0 00              168         NOP
00A1 00              169         NOP
00A2 00              170         NOP
00A3 00              171         NOP
00A4 00              172         NOP
00A5 00              173         NOP
00A6 22              174         RET
                     175     
                     176     ;----------------------------------------------------------
                     177     ; START
00A7                 178     START:
00A7 758901          179         MOV TMOD, #01H       ; Timer1 Mode 2 (for UART), Timer0 Mode 1
00AA C28C            180         CLR TR0               ; Ensure Timer0 OFF
                     181        
00AC 758A00          182         MOV TL0, #00h  ; Reset Timer0 for next round
00AF 758C00          183         MOV TH0, #00h
                     184     
00B2 C2A0            185         CLR LED0 ; make sure all pins are ready
00B4 C2A1            186         CLR LED1
00B6 C2A2            187         CLR LED2
00B8 C2A3            188         CLR LED3
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     4

00BA C2A4            189         CLR LED4
00BC C2A5            190         CLR LED5
00BE C2A6            191         CLR LED6
00C0 C2A7            192         CLR LED7
00C2 C291            193         CLR US_TRIG_R
00C4 C290            194         CLR US_ECHO_R
00C6 C295            195         CLR LCD_RS      
00C8 C296            196         CLR LCD_RW      
00CA C297            197         CLR LCD_EN      
00CC 75B000          198         MOV LCD_DATA,#00h   
                     199     
00CF 1124            200         ACALL LCD_INIT       ; Initialize LCD
                     201         
                     202         ;send start string
00D1 900189          203         MOV DPTR,#MSG_START
00D4 1135            204         ACALL LCD_SEND_STRING
00D6 1192            205         ACALL DELAY_500US
00D8 113F            206         ACALL LCD_CLEAR
                     207     
00DA                 208     MAIN_TOGGLE:
                     209         ; Send TRIG pulse
00DA D291            210         SETB US_TRIG_R
00DC 119C            211         ACALL DELAY_10US
00DE C291            212         CLR  US_TRIG_R
                     213     
00E0                 214     WAIT_ECHO_HIGH: ; also this was JB and that was waiting for echo low which doesnt make any 
                             sense
00E0 3090FD          215         JNB   US_ECHO_R, WAIT_ECHO_HIGH
00E3 C28D            216         CLR  TF0
00E5 C28C            217         CLR  TR0
                     218     
                     219         ; Start Timer0
00E7 D28C            220         SETB TR0
                     221     
                     222     
00E9                 223     WAIT_RISE:
00E9 20900E          224         JB   US_ECHO_R, GOT_ECHO
00EC D8FB            225         DJNZ  R0, WAIT_RISE
00EE D9F9            226         DJNZ  R1, WAIT_RISE
00F0 8002            227         SJMP  NO_ECHO
                     228     
00F2 C293            229     CLR LED_OUT
                     230     
00F4                 231     NO_ECHO:
00F4 C28C            232         CLR TR0
00F6 D293            233         SETB LED_OUT
00F8 80E0            234         SJMP MAIN_TOGGLE
                     235     
00FA                 236     GOT_ECHO:
                     237     ;i can belive this fixed everything 
00FA                 238     WAIT_ECHO_LOW:
00FA 2090FD          239         JB   US_ECHO_R, WAIT_ECHO_LOW
00FD C28D            240         CLR  TF0
00FF C28C            241         CLR  TR0
                     242     
                     243         ; -----------------------------
                     244         ; Print "Pulse: " and Timer0
                     245         ; -----------------------------
0101 900181          246         MOV DPTR, #MSG_PULSE
0104 1135            247         ACALL LCD_SEND_STRING
0106 E58C            248         MOV A,TH0
0108 1173            249         ACALL LCD_SEND_HEX
010A E58A            250         MOV A,TL0
010C 1173            251         ACALL LCD_SEND_HEX
                     252     
                     253             ; Calculate pulse duration
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     5

010E E58A            254         MOV A, TL0       ; Store TL0 in R0
0110 F8              255         MOV R0, A
0111 E58C            256         MOV A, TH0       ; Store TH0 in R1
0113 F9              257         MOV R1, A
                     258     
                     259         ; Use DPH:DPL = R1:R0 to load 16-bit value
0114 8882            260         MOV DPL, R0
0116 8983            261         MOV DPH, R1
                     262     
                     263         ; Approximate Distance = timer / 53
                     264         ; Result will be in R7
0118 7F00            265         MOV R7, #0        ; Distance result = 0
                     266     
011A                 267     DIV_LOOP:
011A C3              268         CLR C
011B E582            269         MOV A, DPL
011D 9435            270         SUBB A, #53
011F F582            271         MOV DPL, A
0121 E583            272         MOV A, DPH
0123 9400            273         SUBB A, #00
0125 F583            274         MOV DPH, A
0127 4003            275         JC DIV_DONE       ; Stop if DPH:DPL < 53
0129 0F              276         INC R7
012A 80EE            277         SJMP DIV_LOOP
                     278     
012C                 279     DIV_DONE:
                     280         ; ---- move cursor to start of line 2 ------------------
012C 74C0            281         MOV  A,#0C0h              ; DDRAM addr 40 → line 2, col 0
012E 110C            282         ACALL LCD_CMD
                     283     
                     284         ; Display Distance (in cm)
0130 90019A          285         MOV DPTR, #MSG_DISTANCE
0133 1135            286         ACALL LCD_SEND_STRING
0135 EF              287         MOV A, R7
0136 1146            288         ACALL LCD_SEND_DECIMAL
                     289     
                     290             ; ----- Clear all LEDs (P2.0 to P2.7) -----
0138 75A000          291         MOV P2,#0h
                     292     
                     293         ; ----- Light LEDs based on distance in R2 -----
013B EF              294         MOV A, R7
                     295     
013C B40A02          296         CJNE A, #10, CHECK_20
013F D2A0            297         SETB LED0
                     298     
0141                 299     CHECK_20:
0141 4033            300         JC DONE_LEDS       ; A < 10
0143 D2A0            301         SETB LED0
0145 B41402          302         CJNE A, #20, CHECK_30
0148 D2A1            303         SETB LED1
                     304     
014A                 305     CHECK_30:
014A 402A            306         JC DONE_LEDS
014C D2A1            307         SETB LED1
014E B41E02          308         CJNE A, #30, CHECK_40
0151 D2A2            309         SETB LED2
                     310     
0153                 311     CHECK_40:
0153 4021            312         JC DONE_LEDS
0155 D2A2            313         SETB LED2
0157 B42802          314         CJNE A, #40, CHECK_50
015A D2A3            315         SETB LED3
                     316     
015C                 317     CHECK_50:
015C 4018            318         JC DONE_LEDS
015E D2A3            319         SETB LED3
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     6

0160 B43202          320         CJNE A, #50, CHECK_60
0163 D2A4            321         SETB LED4
                     322     
0165                 323     CHECK_60:
0165 400F            324         JC DONE_LEDS
0167 D2A4            325         SETB LED4
0169 B43C02          326         CJNE A, #60, CHECK_70
016C D2A5            327         SETB LED5
                     328     
016E                 329     CHECK_70:
016E 4006            330         JC DONE_LEDS
0170 D2A5            331         SETB LED5
0172 D2A6            332         SETB LED6
0174 D2A7            333         SETB LED7           ; Everything beyond 70 cm → all LEDs ON
                     334     
0176                 335     DONE_LEDS:
                     336     
                     337         ; Reset Timer0 for next round
0176 758A00          338         MOV TL0, #00h
0179 758C00          339         MOV TH0, #00h
                     340         
017C 113F            341         ACALL LCD_CLEAR
017E 0200DA          342         LJMP MAIN_TOGGLE
                     343     
                     344     ;---------------------Rom Message------------------------------------
0181 50756C73        345     MSG_PULSE: DB "Pulse: ", 0
0185 653A2000                
0189 50726F67        346     MSG_START: DB "Program Starting",0
018D 72616D20                
0191 53746172                
0195 74696E67                
0199 00                      
019A 44697374        347     MSG_DISTANCE: DB "Distance: ", 0
019E 616E6365                
01A2 3A2000                  
01A5 30313233        348     HEX_TAB: DB  "0123456789ABCDEF" ; 16-byte table
01A9 34353637                
01AD 38394142                
01B1 43444546                
                     349     
                     350     
                     351     END
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

B. . . . . . . . .  D ADDR   00F0H   A   
CHECK_20 . . . . .  C ADDR   0141H   A   
CHECK_30 . . . . .  C ADDR   014AH   A   
CHECK_40 . . . . .  C ADDR   0153H   A   
CHECK_50 . . . . .  C ADDR   015CH   A   
CHECK_60 . . . . .  C ADDR   0165H   A   
CHECK_70 . . . . .  C ADDR   016EH   A   
DELAY_10US . . . .  C ADDR   009CH   A   
DELAY_500US. . . .  C ADDR   0092H   A   
DIV_DONE . . . . .  C ADDR   012CH   A   
DIV_LOOP . . . . .  C ADDR   011AH   A   
DL1. . . . . . . .  C ADDR   0005H   A   
DL2. . . . . . . .  C ADDR   0007H   A   
DONE_DEC . . . . .  C ADDR   0072H   A   
DONE_LEDS. . . . .  C ADDR   0176H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
GOT_ECHO . . . . .  C ADDR   00FAH   A   
HEX_TAB. . . . . .  C ADDR   01A5H   A   
HEX_TO_ASCII . . .  C ADDR   0085H   A   
L1 . . . . . . . .  C ADDR   0094H   A   
L2 . . . . . . . .  C ADDR   0096H   A   
LCD_CLEAR. . . . .  C ADDR   003FH   A   
LCD_CMD. . . . . .  C ADDR   000CH   A   
LCD_DATA . . . . .  D ADDR   00B0H   A   
LCD_DATA_WRITE . .  C ADDR   0019H   A   
LCD_DELAY. . . . .  C ADDR   0003H   A   
LCD_EN . . . . . .  B ADDR   0090H.7 A   
LCD_INIT . . . . .  C ADDR   0024H   A   
LCD_RS . . . . . .  B ADDR   0090H.5 A   
LCD_RW . . . . . .  B ADDR   0090H.6 A   
LCD_SEND_DECIMAL .  C ADDR   0046H   A   
LCD_SEND_HEX . . .  C ADDR   0073H   A   
LCD_SEND_STRING. .  C ADDR   0035H   A   
LCD_STRING_DONE. .  C ADDR   003EH   A   
LED0 . . . . . . .  B ADDR   00A0H.0 A   
LED1 . . . . . . .  B ADDR   00A0H.1 A   
LED2 . . . . . . .  B ADDR   00A0H.2 A   
LED3 . . . . . . .  B ADDR   00A0H.3 A   
LED4 . . . . . . .  B ADDR   00A0H.4 A   
LED5 . . . . . . .  B ADDR   00A0H.5 A   
LED6 . . . . . . .  B ADDR   00A0H.6 A   
LED7 . . . . . . .  B ADDR   00A0H.7 A   
LED_OUT. . . . . .  B ADDR   0090H.3 A   
MAIN_TOGGLE. . . .  C ADDR   00DAH   A   
MSG_DISTANCE . . .  C ADDR   019AH   A   
MSG_PULSE. . . . .  C ADDR   0181H   A   
MSG_START. . . . .  C ADDR   0189H   A   
NO_ECHO. . . . . .  C ADDR   00F4H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PRINT_ONES . . . .  C ADDR   006DH   A   
SKIP_HUNDREDS. . .  C ADDR   005BH   A   
SKIP_TENS. . . . .  C ADDR   0064H   A   
START. . . . . . .  C ADDR   00A7H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/26/2025 11:51:20 PAGE     8

TR0. . . . . . . .  B ADDR   0088H.4 A   
US_ECHO_R. . . . .  B ADDR   0090H.0 A   
US_TRIG_R. . . . .  B ADDR   0090H.1 A   
WAIT_ECHO_HIGH . .  C ADDR   00E0H   A   
WAIT_ECHO_LOW. . .  C ADDR   00FAH   A   
WAIT_RISE. . . . .  C ADDR   00E9H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
