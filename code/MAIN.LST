
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	..\main.asm
	Object File:	..\main.hex
	List File:	..\main.lst



 Line  I  Addr  Code            Source

    1:				;----------------------------------------
    2:				; Variables / Ports
    3:				;----------------------------------------
    4:		B      0091	US_TRIG_R   EQU  P1.1    ; Right Trigger pin
    5:		B      0090	US_ECHO_R   EQU  P1.0    ; Right Echo pin
    6:		B      00A0	LED1    EQU P2.0   ; 0–10 cm
    7:		B      00A1	LED2    EQU P2.1   ; 10–20 cm
    8:		B      00A2	LED3    EQU P2.2   ; 20–30 cm
    9:		B      00A3	LED4    EQU P2.3   ; 30–40 cm
   10:		B      00A4	LED5    EQU P2.4   ; 40–50 cm
   11:		B      00A5	LED6    EQU P2.5   ; 50–60 cm
   12:		B      00A6	LED7    EQU P2.6   ; 60–70 cm
   13:		B      00A7	LED8    EQU P2.7   ; >70 cm
   14:		B      0097	LED_OUT EQU P1.7   ; Out of range indicator (e.g., no object detected)
   15:
   16:
   17:
   18:
   19:		N      0000	ORG 0000h
   20:	  0000	02 00 3C	LJMP START
   21:
   22:				;----------------------------------------
   23:				; Subroutine: DELAY_10US
   24:				; Purpose:    ≈10 µs delay (at 11.0592 MHz)
   25:				;----------------------------------------
   26:	  0003			DELAY_10US:
   27:	  0003	00		    NOP       ; 1 µs
   28:	  0004	00		    NOP
   29:	  0005	00		    NOP
   30:	  0006	00		    NOP
   31:	  0007	00		    NOP
   32:	  0008	00		    NOP
   33:	  0009	00		    NOP
   34:	  000A	00		    NOP
   35:	  000B	00		    NOP
   36:	  000C	00		    NOP       ; ≈10 µs total
   37:	  000D	22		    RET
   38:
   39:
   40:				;=======================
   41:				; UART Initialization
   42:	  000E			UART_INIT:
   43:	  000E	75 8D FD	    MOV TH1, #0FDh      ; Baud rate 9600 @ 11.0592 MHz

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  0011	75 8B FD	    MOV TL1, #0FDh
   45:	  0014	75 98 50	     MOV SCON, #50h      ; 8-bit UART mode, REN enabled
   46:	  0017	D2 8E		    SETB TR1            ; Start Timer1
   47:	  0019	22		    RET
   48:
   49:				;=======================
   50:				; UART Send Single Byte
   51:	  001A			UART_SEND:
   52:	  001A	F5 99		    MOV SBUF, A
   53:	  001C			WAIT_SEND:
   54:	  001C	30 99 FD	    JNB TI, WAIT_SEND
   55:	  001F	C2 99		    CLR TI
   56:	  0021	22		    RET
   57:
   58:				;=======================
   59:				; UART Send String
   60:	  0022			SEND_STRING:
   61:	  0022	E4		     CLR A
   62:	  0023	93		    MOVC A, @A+DPTR
   63:	  0024	60 05		    JZ DONE_STRING
   64:	  0026	11 1A		    ACALL UART_SEND
   65:	  0028	A3		    INC DPTR
   66:	  0029	80 F7		    SJMP SEND_STRING
   67:	  002B			DONE_STRING:
   68:	  002B	22		    RET
   69:
   70:				; Convert R7 to ASCII and send
   71:	  002C			SEND_DECIMAL:
   72:	  002C	EF		    MOV A, R7
   73:	  002D	75 F0 0A	    MOV B, #10
   74:	  0030	84		    DIV AB            ; A = tens, B = units
   75:	  0031	24 30		    ADD A, #'0'
   76:	  0033	11 1A		    ACALL UART_SEND   ; send tens
   77:	  0035	E5 F0		    MOV A, B
   78:	  0037	24 30		    ADD A, #'0'
   79:	  0039	11 1A		    ACALL UART_SEND   ; send units
   80:	  003B	22		    RET
   81:
   82:	  003C			START:
   83:				    ; Initialize timer
   84:	  003C	75 89 21	    MOV     TMOD, #21h    ; Timer0 in Mode 1 (16‑bit)
   85:	  003F	C2 8C		    CLR     TR0           ; Ensure Timer0 is OFF
   86:
   87:	  0041	11 0E		    ACALL UART_INIT
   88:
   89:				    ;Clear all LEDS
   90:	  0043	C2 A0		    CLR LED1
   91:	  0045	C2 A1		    CLR LED2
   92:	  0047	C2 A2		    CLR LED3
   93:	  0049	C2 A3		    CLR LED4
   94:	  004B	C2 A4		    CLR LED5
   95:	  004D	C2 A5		    CLR LED6
   96:	  004F	C2 A6		    CLR LED7
   97:	  0051	C2 A7		    CLR LED8
   98:				    ;Clear Trigger/Echo
   99:	  0053	C2 91		    CLR US_TRIG_R

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  0055	C2 90		    CLR US_ECHO_R
  101:
  102:
  103:	  0057			MAIN_TOGGLE:
  104:				    ; Call Trigger
  105:	  0057	D2 91		    SETB    US_TRIG_R    ; Drive P1.1 HIGH
  106:	  0059	11 03		    ACALL   DELAY_10US   ; Wait ≈10 µs
  107:	  005B	C2 91		    CLR     US_TRIG_R    ; Drive P1.1 LOW
  108:
  109:
  110:
  111:	  005D			WAIT_ECHO_LOW:
  112:	  005D	20 90 FD	    JB   US_ECHO_R, WAIT_ECHO_LOW
  113:	  0060	C2 8D		    CLR  TF0
  114:	  0062	C2 8C		    CLR  TR0           ; ensure timer stopped
  115:				    ;----------------------------------------
  116:				    ; 2) Start Timer & await rising edge
  117:				    ;----------------------------------------
  118:	  0064	D2 8C		    SETB TR0
  119:
  120:				; Set up timeout = 11 600 µs / 3 µs ≈ 3867 loops
  121:	  0066	A9 0F		MOV   R1, 0Fh    ; high byte = 15
  122:	  0068	A8 23		MOV   R0, 23h    ; low byte = 35 → 15×256 + 35 = 3860
  123:
  124:	  006A			WAIT_RISE:
  125:	  006A	20 90 0E	    JB   US_ECHO_R, GOT_ECHO
  126:	  006D	D8 FB		    DJNZ  R0, WAIT_RISE   ; decrement low‑byte
  127:	  006F	D9 F9		    DJNZ  R1, WAIT_RISE   ; when low‑byte underflows, decrement high‑byte
  128:	  0071	80 02		    SJMP  NO_ECHO
  129:
  130:	  0073	C2 97		CLR  LED_OUT
  131:
  132:	  0075			NO_ECHO:
  133:	  0075	C2 8C		    CLR  TR0                      ; ensure timer stopped
  134:	  0077	D2 97		    SETB  LED_OUT               ; indicate “no reading” or far
  135:	  0079	80 DC		    SJMP MAIN_TOGGLE              ; retrigger immediately
  136:
  137:	  007B			GOT_ECHO:
  138:	  007B	C2 8C		    CLR TR0
  139:	  007D	11 82		    ACALL SHOW_DISTANCE
  140:	  007F	02 01 75	    LJMP END_CHECK
  141:
  142:				;----------------------------------------
  143:				; Subroutine: SHOW_DISTANCE
  144:				; Purpose: Map timer value to 1 of 8 distance LEDs
  145:				;----------------------------------------
  146:	  0082			SHOW_DISTANCE:
  147:	  0082	C2 97		    CLR LED_OUT
  148:
  149:				    ; Combine timer value → R1:R0
  150:	  0084	E5 8A		    MOV A, TL0
  151:	  0086	F8		    MOV R0, A
  152:	  0087	E5 8C		    MOV A, TH0
  153:	  0089	F9		    MOV R1, A
  154:
  155:				    ; Compute distance = (R1:R0) / 58 → store in R7

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:	  008A	88 82		    MOV DPL, R0       ; Load low byte
  157:	  008C	89 83		    MOV DPH, R1       ; Load high byte
  158:	  008E	7F 00		    MOV R7, #0        ; Result register = 0
  159:
  160:				    ; Print "Timer: "
  161:	  0090	90 01 8F	    MOV DPTR, #TIMER_MSG
  162:	  0093	11 22		    ACALL send_string
  163:
  164:	  0095			    DIV_LOOP:
  165:	  0095	C3		        CLR C
  166:	  0096	E5 82		        MOV A, DPL
  167:	  0098	94 58		        SUBB A, #058h
  168:	  009A	F5 82		        MOV DPL, A
  169:	  009C	E5 83		        MOV A, DPH
  170:	  009E	94 00		        SUBB A, #00h
  171:	  00A0	F5 83		        MOV DPH, A
  172:	  00A2	40 03		        JC DIV_DONE
  173:	  00A4	0F		        INC R7
  174:	  00A5	80 EE		        SJMP DIV_LOOP
  175:
  176:	  00A7			    DIV_DONE:
  177:				    ; Send values to be printed
  178:				    ; Print R1 value
  179:	  00A7	E9		    MOV A, R1
  180:	  00A8	75 F0 64	    MOV B, #100
  181:	  00AB	84		    DIV AB
  182:	  00AC	24 30		    ADD A, #'0'        ; Convert to ASCII
  183:	  00AE	11 1A		    ACALL UART_SEND
  184:	  00B0	E5 F0		    MOV A, B
  185:	  00B2	75 F0 0A	    MOV B, #10
  186:	  00B5	84		    DIV AB
  187:	  00B6	24 30		    ADD A, #'0'
  188:	  00B8	11 1A		    ACALL UART_SEND
  189:	  00BA	E5 F0		    MOV A, B
  190:	  00BC	24 30		    ADD A, #'0'
  191:	  00BE	11 1A		    ACALL UART_SEND
  192:
  193:				    ; Print ":"
  194:	  00C0	74 3A		    MOV A, #':'
  195:	  00C2	11 1A		    ACALL UART_SEND
  196:
  197:				    ; Print R0 value
  198:	  00C4	E8		    MOV A, R0
  199:	  00C5	75 F0 64	    MOV B, #100
  200:	  00C8	84		    DIV AB
  201:	  00C9	24 30		    ADD A, #'0'
  202:	  00CB	11 1A		    ACALL UART_SEND
  203:	  00CD	E5 F0		    MOV A, B
  204:	  00CF	75 F0 0A	    MOV B, #10
  205:	  00D2	84		    DIV AB
  206:	  00D3	24 30		    ADD A, #'0'
  207:	  00D5	11 1A		    ACALL UART_SEND
  208:	  00D7	E5 F0		    MOV A, B
  209:	  00D9	24 30		    ADD A, #'0'
  210:	  00DB	11 1A		    ACALL UART_SEND
  211:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:				    ; Print newline
  213:	  00DD	74 0D		    MOV A, #13
  214:	  00DF	11 1A		    ACALL UART_SEND
  215:	  00E1	74 0A		    MOV A, #10
  216:	  00E3	11 1A		    ACALL UART_SEND
  217:
  218:				    ; Send "Distance: "
  219:	  00E5	90 01 7E	    MOV DPTR, #dist_msg
  220:	  00E8	11 22		    acall send_string
  221:
  222:				    ; Send decimal digits from R7
  223:	  00EA	11 2C		    ACALL SEND_DECIMAL
  224:
  225:				    ; Send " cm\r\n"
  226:	  00EC	90 01 89	    MOV DPTR, #cm_msg
  227:	  00EF	11 22		    ACALL send_string
  228:
  229:				    ; Clear all LEDs
  230:	  00F1	C2 A0		    CLR LED1
  231:	  00F3	C2 A1		    CLR LED2
  232:	  00F5	C2 A2		    CLR LED3
  233:	  00F7	C2 A3		    CLR LED4
  234:	  00F9	C2 A4		    CLR LED5
  235:	  00FB	C2 A5		    CLR LED6
  236:	  00FD	C2 A6		    CLR LED7
  237:	  00FF	C2 A7		    CLR LED8
  238:
  239:				    ; ----- Check: R1:R0 < 580 -----
  240:	  0101	75 83 02	    MOV DPH, #02h
  241:	  0104	75 82 44	    MOV DPL, #044h
  242:	  0107	31 61		    ACALL CMP16_LT
  243:	  0109	40 3E		    JC SET_LED1
  244:
  245:				    ; ----- Check: R1:R0 < 1160 -----
  246:	  010B	75 83 04	    MOV DPH, #04h
  247:	  010E	75 82 88	    MOV DPL, #088h
  248:	  0111	31 61		    ACALL CMP16_LT
  249:	  0113	40 37		    JC SET_LED2
  250:
  251:				    ; ----- Check: R1:R0 < 1740 -----
  252:	  0115	75 83 06	    MOV DPH, #06h
  253:	  0118	75 82 CC	    MOV DPL, #0CCh
  254:	  011B	31 61		    ACALL CMP16_LT
  255:	  011D	40 30		    JC SET_LED3
  256:
  257:				    ; ----- Check: R1:R0 < 2320 -----
  258:	  011F	75 83 09	    MOV DPH, #09h
  259:	  0122	75 82 10	    MOV DPL, #010h
  260:	  0125	31 61		    ACALL CMP16_LT
  261:	  0127	40 29		    JC SET_LED4
  262:
  263:				    ; ----- Check: R1:R0 < 2900 -----
  264:	  0129	75 83 0B	    MOV DPH, #0Bh
  265:	  012C	75 82 54	    MOV DPL, #054h
  266:	  012F	31 61		    ACALL CMP16_LT
  267:	  0131	40 22		    JC SET_LED5

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268:
  269:				    ; ----- Check: R1:R0 < 3480 -----
  270:	  0133	75 83 0D	    MOV DPH, #0Dh
  271:	  0136	75 82 98	    MOV DPL, #098h
  272:	  0139	31 61		    ACALL CMP16_LT
  273:	  013B	40 1B		    JC SET_LED6
  274:
  275:				    ; ----- Check: R1:R0 < 4060 -----
  276:	  013D	75 83 0F	    MOV DPH, #0Fh
  277:	  0140	75 82 DC	    MOV DPL, #0DCh
  278:	  0143	31 61		    ACALL CMP16_LT
  279:	  0145	40 14		    JC SET_LED7
  280:
  281:				    ; Else → LED8
  282:	  0147	80 15		    SJMP SET_LED8
  283:
  284:	  0149			SET_LED1:
  285:	  0149	D2 A0		    SETB LED1  ; 0–10cm
  286:	  014B	22		    RET
  287:	  014C			SET_LED2:
  288:	  014C	D2 A1		    SETB LED2  ; 10–20cm
  289:	  014E	22		    RET
  290:	  014F			SET_LED3:
  291:	  014F	D2 A2		    SETB LED3  ; 20–30cm
  292:	  0151	22		    RET
  293:	  0152			SET_LED4:
  294:	  0152	D2 A3		    SETB LED4  ; 30–40cm
  295:	  0154	22		    RET
  296:	  0155			SET_LED5:
  297:	  0155	D2 A4		    SETB LED5  ; 40–50cm
  298:	  0157	22		    RET
  299:	  0158			SET_LED6:
  300:	  0158	D2 A5		    SETB LED6  ; 50–60cm
  301:	  015A	22		    RET
  302:	  015B			SET_LED7:
  303:	  015B	D2 A6		    SETB LED7  ; 60–70cm
  304:	  015D	22		    RET
  305:	  015E			SET_LED8:
  306:	  015E	D2 A7		    SETB LED8  ; >70cm
  307:	  0160	22		    RET
  308:
  309:				;----------------------------------------
  310:				; Subroutine: CMP16_LT
  311:				; Purpose: Compare R1:R0 with DPH:DPL
  312:				; Returns: CY = 1 if R1:R0 < DPH:DPL
  313:				;----------------------------------------
  314:	  0161			CMP16_LT:
  315:	  0161	E9		    MOV A, R1
  316:	  0162	C3		    CLR C
  317:	  0163	95 83		    SUBB A, DPH
  318:	  0165	60 04		    JZ CHECK_LOW
  319:	  0167	40 0A		    JC DONE_LT     ; R1 < DPH
  320:	  0169	80 06		    SJMP DONE_GE   ; R1 > DPH
  321:
  322:	  016B			CHECK_LOW:
  323:	  016B	E8		    MOV A, R0

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:	  016C	C3		    CLR C
  325:	  016D	95 82		    SUBB A, DPL
  326:	  016F	40 02		    JC DONE_LT     ; R0 < DPL
  327:
  328:	  0171			DONE_GE:
  329:	  0171	C3		    CLR C          ; Greater or equal
  330:	  0172	22		    RET
  331:
  332:	  0173			DONE_LT:
  333:	  0173	D3		    SETB C         ; Less than
  334:	  0174	22		    RET
  335:
  336:
  337:
  338:	  0175			END_CHECK:
  339:	  0175	75 8A 00	    MOV TL0, #00h   ; Clear Timer0 low byte
  340:	  0178	75 8C 00	    MOV TH0, #00h   ; Clear Timer0 high byte
  341:	  017B	02 00 57	    LJMP    MAIN_TOGGLE
  342:
  343:	  017E	44 69 73 74	dist_msg: DB 'Distance: ', 0
	  0182	61 6E 63 65
	  0186	3A 20 00
  344:	  0189	20 63 6D 0D	cm_msg: DB ' cm', 13, 10, 0
	  018D	0A 00
  345:	  018F	54 69 6D 65	TIMER_MSG: DB 'Timer: ', 0
	  0193	72 3A 20 00
  346:
  347:				END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CHECK_LOW			  CODE	    016B	 322
CMP16_LT			  CODE	    0161	 314
CM_MSG				  CODE	    0189	 344
CY				  BIT	      D7
DELAY_10US			  CODE	    0003	  26
DIST_MSG			  CODE	    017E	 343
DIV_DONE			  CODE	    00A7	 176
DIV_LOOP			  CODE	    0095	 164
DONE_GE				  CODE	    0171	 328
DONE_LT				  CODE	    0173	 332
DONE_STRING			  CODE	    002B	  67
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
END_CHECK			  CODE	    0175	 338
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
GOT_ECHO			  CODE	    007B	 137
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LED1				  NUMBER    00A0	   6
LED2				  NUMBER    00A1	   7
LED3				  NUMBER    00A2	   8
LED4				  NUMBER    00A3	   9
LED5				  NUMBER    00A4	  10
LED6				  NUMBER    00A5	  11
LED7				  NUMBER    00A6	  12
LED8				  NUMBER    00A7	  13
LED_OUT				  NUMBER    0097	  14
MAIN_TOGGLE			  CODE	    0057	 103
NO_ECHO				  CODE	    0075	 132
OV				  BIT	      D2
P				  BIT	      D0

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SEND_DECIMAL			  CODE	    002C	  71
SEND_STRING			  CODE	    0022	  60
SET_LED1			  CODE	    0149	 284
SET_LED2			  CODE	    014C	 287
SET_LED3			  CODE	    014F	 290
SET_LED4			  CODE	    0152	 293
SET_LED5			  CODE	    0155	 296
SET_LED6			  CODE	    0158	 299
SET_LED7			  CODE	    015B	 302
SET_LED8			  CODE	    015E	 305
SHOW_DISTANCE			  CODE	    0082	 146
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    003C	  82
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TIMER_MSG			  CODE	    018F	 345
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
UART_INIT			  CODE	    000E	  42
UART_SEND			  CODE	    001A	  51
US_ECHO_R			  NUMBER    0090	   5
US_TRIG_R			  NUMBER    0091	   4
WAIT_ECHO_LOW			  CODE	    005D	 111
WAIT_RISE			  CODE	    006A	 124
WAIT_SEND			  CODE	    001C	  53
WR				  BIT	      B6
