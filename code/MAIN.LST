
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	..\main.asm
	Object File:	..\main.hex
	List File:	..\main.lst



 Line  I  Addr  Code            Source

    1:				;----------------------------------------
    2:				; Variables / Ports
    3:				;----------------------------------------
    4:		B      0091	US_TRIG_R   EQU  P1.1    ; Right Trigger pin
    5:		B      0090	US_ECHO_R   EQU  P1.0    ; Right Echo pin
    6:		B      00A0	LED_FAR_1   EQU  P2.0    ; First Far LED
    7:		B      00A4	LED_FAR_2   EQU  P2.4    ; Second Far LED
    8:		B      00A1	LED_MID_1   EQU  P2.1    ; First Mid LED
    9:		B      00A3	LED_MID_2   EQU  P2.3    ; Second Mid LED
   10:		B      00A2	LED_CLOSE   EQU  P2.2    ; Close LED
   11:
   12:		N      0000	ORG 0000h
   13:	  0000	02 00 0E	LJMP START
   14:
   15:				;----------------------------------------
   16:				; Subroutine: DELAY_10US
   17:				; Purpose:    ≈10 µs delay (at 11.0592 MHz)
   18:				;----------------------------------------
   19:	  0003			DELAY_10US:
   20:	  0003	00		    NOP       ; 1 µs
   21:	  0004	00		    NOP
   22:	  0005	00		    NOP
   23:	  0006	00		    NOP
   24:	  0007	00		    NOP
   25:	  0008	00		    NOP
   26:	  0009	00		    NOP
   27:	  000A	00		    NOP
   28:	  000B	00		    NOP
   29:	  000C	00		    NOP       ; ≈10 µs total
   30:	  000D	22		    RET
   31:
   32:
   33:
   34:	  000E			START:
   35:				    ; Initialize timer
   36:	  000E	75 89 01	    MOV     TMOD, #01h    ; Timer0 in Mode 1 (16‑bit)
   37:	  0011	C2 8C		    CLR     TR0           ; Ensure Timer0 is OFF
   38:	  0013	C2 A0		    CLR LED_FAR_1
   39:	  0015	C2 A4		    CLR LED_FAR_2
   40:	  0017	C2 A1		    CLR LED_MID_1
   41:	  0019	C2 A3		    CLR LED_MID_2
   42:	  001B	C2 A2		    CLR LED_CLOSE
   43:	  001D	C2 91		    CLR US_TRIG_R

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  001F	C2 90		    CLR US_ECHO_R
   45:
   46:
   47:	  0021			MAIN_TOGGLE:
   48:				    ; Call Trigger
   49:	  0021	D2 91		    SETB    US_TRIG_R    ; Drive P1.1 HIGH
   50:	  0023	11 03		    ACALL   DELAY_10US   ; Wait ≈10 µs
   51:	  0025	C2 91		    CLR     US_TRIG_R    ; Drive P1.1 LOW
   52:	  0027	11 03		    ACALL   DELAY_10US   ; Wait ≈10 µs
   53:
   54:
   55:
   56:	  0029			WAIT_ECHO_LOW:
   57:	  0029	20 90 FD	    JB   US_ECHO_R, WAIT_ECHO_LOW
   58:	  002C	C2 8D		    CLR  TF0
   59:	  002E	C2 8C		    CLR  TR0           ; ensure timer stopped
   60:
   61:				    ;----------------------------------------
   62:				    ; 2) Start Timer & await rising edge
   63:				    ;----------------------------------------
   64:	  0030	D2 8C		    SETB TR0
   65:
   66:				; Set up timeout = 11 600 µs / 3 µs ≈ 3867 loops
   67:	  0032	A9 0F		MOV   R1, 0Fh    ; high byte = 15
   68:	  0034	A8 23		MOV   R0, 23h    ; low byte = 35 → 15×256 + 35 = 3860
   69:
   70:	  0036			WAIT_RISE:
   71:	  0036	20 90 0E	    JB   US_ECHO_R, GOT_ECHO
   72:	  0039	D8 FB		    DJNZ  R0, WAIT_RISE   ; decrement low‑byte
   73:	  003B	D9 F9		    DJNZ  R1, WAIT_RISE   ; when low‑byte underflows, decrement high‑byte
   74:	  003D	80 02		    SJMP  NO_ECHO
   75:
   76:	  003F	D2 A2		SETB  LED_CLOSE
   77:
   78:	  0041			NO_ECHO:
   79:	  0041	C2 8C		    CLR  TR0                      ; ensure timer stopped
   80:	  0043	C2 A2		    CLR  LED_CLOSE                ; indicate “no reading” or far
   81:	  0045	80 DA		    SJMP MAIN_TOGGLE              ; retrigger immediately
   82:
   83:	  0047			GOT_ECHO:
   84:	  0047	C2 8C		    CLR TR0
   85:				    ; Get result
   86:				    ;Distance (cm) = (Echo_High_Time (µs)) / 58
   87:				    ; example calculation: 10cm = 10 * 58 = 580us
   88:
   89:	  0049	E5 8C		    MOV     A, TH0
   90:	  004B	B4 02 0F	    CJNE    A, #2, IS_CLOSE   ; TH0<2 ⇒ count<512 ⇒ definitely <580
   91:	  004E	40 0D		    JC      IS_CLOSE
   92:				    ; if TH0>2 ⇒ count>2×256=512 but might still be <580
   93:				    ; for TH0==2 check TL0
   94:	  0050	E5 8A		    MOV   A, TL0
   95:	  0052	C3		    CLR   C            ; clear carry before subtraction
   96:	  0053	94 44		    SUBB  A, #044h     ; A ← TL0 − 68; C=0 if TL0≥68, C=1 if TL0<68
   97:	  0055	50 02		    JNC   NOT_CLOSE    ; if C=0 (TL0≥0x44) → not close
   98:				    ; else (C=1) → close
   99:	  0057	80 04		    SJMP  IS_CLOSE

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:	  0059			NOT_CLOSE:
  102:	  0059	C2 A2		    CLR     LED_CLOSE
  103:	  005B	80 02		    SJMP    END_CHECK
  104:
  105:	  005D			IS_CLOSE:
  106:	  005D	D2 A2		    SETB    LED_CLOSE
  107:
  108:	  005F			END_CHECK:
  109:	  005F	80 C0		    SJMP    MAIN_TOGGLE
  110:
  111:
  112:				END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CY				  BIT	      D7
DELAY_10US			  CODE	    0003	  19
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
END_CHECK			  CODE	    005F	 108
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
GOT_ECHO			  CODE	    0047	  83
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IS_CLOSE			  CODE	    005D	 105
IT0				  BIT	      88
IT1				  BIT	      8A
LED_CLOSE			  NUMBER    00A2	  10
LED_FAR_1			  NUMBER    00A0	   6
LED_FAR_2			  NUMBER    00A4	   7
LED_MID_1			  NUMBER    00A1	   8
LED_MID_2			  NUMBER    00A3	   9
MAIN_TOGGLE			  CODE	    0021	  47
NOT_CLOSE			  CODE	    0059	 101
NO_ECHO				  CODE	    0041	  78
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    000E	  34
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
US_ECHO_R			  NUMBER    0090	   5
US_TRIG_R			  NUMBER    0091	   4
WAIT_ECHO_LOW			  CODE	    0029	  56
WAIT_RISE			  CODE	    0036	  70
WR				  BIT	      B6
