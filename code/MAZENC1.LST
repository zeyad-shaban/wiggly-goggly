
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	..\Mazenc1.asm
	Object File:	..\Mazen.hex
	List File:	..\Mazenc1.lst



 Line  I  Addr  Code            Source

    1:				;----------------------------------------
    2:				; Variables / Ports
    3:				;----------------------------------------
    4:		B      0091	US_TRIG_R   EQU  P1.1    ; Right Trigger pin
    5:		B      0090	US_ECHO_R   EQU  P1.0    ; Right Echo pin
    6:		B      00A0	LED1    EQU P2.0   ; 0–10 cm
    7:		B      00A1	LED2    EQU P2.1   ; 10–20 cm
    8:		B      00A2	LED3    EQU P2.2   ; 20–30 cm
    9:		B      00A3	LED4    EQU P2.3   ; 30–40 cm
   10:		B      00A4	LED5    EQU P2.4   ; 40–50 cm
   11:		B      00A5	LED6    EQU P2.5   ; 50–60 cm
   12:		B      00A6	LED7    EQU P2.6   ; 60–70 cm
   13:		B      00A7	LED8    EQU P2.7   ; >70 cm
   14:		B      0097	LED_OUT EQU P1.7   ; Out of range indicator (e.g., no object detected)
   15:
   16:
   17:
   18:
   19:		N      0000	ORG 0000h
   20:	  0000	02 00 3F	LJMP START
   21:
   22:				;----------------------------------------
   23:				; Subroutine: DELAY_10US
   24:				; Purpose:    ≈10 µs delay (at 11.0592 MHz)
   25:				;----------------------------------------
   26:	  0003			DELAY_10US:
   27:	  0003	00		    NOP       ; 1 µs
   28:	  0004	00		    NOP
   29:	  0005	00		    NOP
   30:	  0006	00		    NOP
   31:	  0007	00		    NOP
   32:	  0008	00		    NOP
   33:	  0009	00		    NOP
   34:	  000A	00		    NOP
   35:	  000B	00		    NOP
   36:	  000C	00		    NOP       ; ≈10 µs total
   37:	  000D	22		    RET
   38:
   39:
   40:				;=======================
   41:				; UART Initialization
   42:	  000E			UART_INIT:
   43:	  000E	75 8D FD	    MOV TH1, #0FDh      ; Baud rate 9600 @ 11.0592 MHz

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  0011	75 8B FD	    MOV TL1, #0FDh
   45:	  0014	75 98 50	     MOV SCON, #50h      ; 8-bit UART mode, REN enabled
   46:	  0017	D2 8E		    SETB TR1            ; Start Timer1
   47:	  0019	22		    RET
   48:
   49:				;=======================
   50:				; UART Send Single Byte
   51:	  001A			UART_SEND:
   52:	  001A	F5 99		    MOV SBUF, A
   53:	  001C			WAIT_SEND:
   54:	  001C	30 99 FD	    JNB TI, WAIT_SEND
   55:	  001F	C2 99		    CLR TI
   56:	  0021	22		    RET
   57:
   58:				;=======================
   59:				; UART Send String
   60:	  0022			SEND_STRING:
   61:	  0022	90 01 44	    MOV DPTR, #MSG1         ; R0 points to message
   62:	  0025			NEXT_CHAR:
   63:	  0025	E4		     CLR A
   64:	  0026	93		    MOVC A, @A+DPTR
   65:	  0027	60 05		    JZ DONE_STRING
   66:	  0029	11 1A		    ACALL UART_SEND
   67:	  002B	A3		    INC DPTR
   68:	  002C	80 F7		    SJMP NEXT_CHAR
   69:	  002E			DONE_STRING:
   70:	  002E	22		    RET
   71:
   72:				; Convert R7 to ASCII and send
   73:	  002F			SEND_DECIMAL:
   74:	  002F	EF		    MOV A, R7
   75:	  0030	75 F0 0A	    MOV B, #10
   76:	  0033	84		    DIV AB            ; A = tens, B = units
   77:	  0034	24 30		    ADD A, #'0'
   78:	  0036	11 1A		    ACALL UART_SEND   ; send tens
   79:	  0038	E5 F0		    MOV A, B
   80:	  003A	24 30		    ADD A, #'0'
   81:	  003C	11 1A		    ACALL UART_SEND   ; send units
   82:	  003E	22		    RET
   83:
   84:	  003F			START:
   85:				    ; Initialize timer
   86:	  003F	75 89 21	    MOV     TMOD, #21h    ; Timer0 in Mode 1 (16‑bit)
   87:	  0042	75 8D FD	    MOV TH1, #0FDh      ; Baud rate 9600 @ 11.0592 MHz
   88:	  0045	75 8B FD	    MOV TL1, #0FDh
   89:	  0048	C2 8C		    CLR     TR0           ; Ensure Timer0 is OFF
   90:
   91:	  004A	11 0E		    ACALL UART_INIT
   92:
   93:				    ;Clear all LEDS
   94:	  004C	C2 A0		    CLR LED1
   95:	  004E	C2 A1		    CLR LED2
   96:	  0050	C2 A2		    CLR LED3
   97:	  0052	C2 A3		    CLR LED4
   98:	  0054	C2 A4		    CLR LED5
   99:	  0056	C2 A5		    CLR LED6

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  0058	C2 A6		    CLR LED7
  101:	  005A	C2 A7		    CLR LED8
  102:				    ;Clear Trigger/Echo
  103:	  005C	C2 91		    CLR US_TRIG_R
  104:	  005E	C2 90		    CLR US_ECHO_R
  105:
  106:
  107:	  0060			MAIN_TOGGLE:
  108:				    ; Call Trigger
  109:	  0060	D2 91		    SETB    US_TRIG_R    ; Drive P1.1 HIGH
  110:	  0062	11 03		    ACALL   DELAY_10US   ; Wait ≈10 µs
  111:	  0064	C2 91		    CLR     US_TRIG_R    ; Drive P1.1 LOW
  112:
  113:
  114:
  115:	  0066			WAIT_ECHO_LOW:
  116:	  0066	20 90 FD	    JB   US_ECHO_R, WAIT_ECHO_LOW
  117:	  0069	C2 8D		    CLR  TF0
  118:	  006B	C2 8C		    CLR  TR0           ; ensure timer stopped
  119:				    ;----------------------------------------
  120:				    ; 2) Start Timer & await rising edge
  121:				    ;----------------------------------------
  122:	  006D	D2 8C		    SETB TR0
  123:
  124:				; Set up timeout = 11 600 µs / 3 µs ≈ 3867 loops
  125:	  006F	A9 0F		MOV   R1, 0Fh    ; high byte = 15
  126:	  0071	A8 23		MOV   R0, 23h    ; low byte = 35 → 15×256 + 35 = 3860
  127:
  128:	  0073			WAIT_RISE:
  129:	  0073	20 90 0E	    JB   US_ECHO_R, GOT_ECHO
  130:	  0076	D8 FB		    DJNZ  R0, WAIT_RISE   ; decrement low‑byte
  131:	  0078	D9 F9		    DJNZ  R1, WAIT_RISE   ; when low‑byte underflows, decrement high‑byte
  132:	  007A	80 02		    SJMP  NO_ECHO
  133:
  134:	  007C	C2 97		CLR  LED_OUT
  135:
  136:	  007E			NO_ECHO:
  137:	  007E	C2 8C		    CLR  TR0                      ; ensure timer stopped
  138:	  0080	D2 97		    SETB  LED_OUT               ; indicate “no reading” or far
  139:	  0082	80 DC		    SJMP MAIN_TOGGLE              ; retrigger immediately
  140:
  141:	  0084			GOT_ECHO:
  142:	  0084	C2 8C		    CLR TR0
  143:	  0086	75 8A 00	    MOV TL0, #00h   ; Clear Timer0 low byte
  144:	  0089	75 8C 00	    MOV TH0, #00h   ; Clear Timer0 high byte
  145:	  008C	11 91		    ACALL SHOW_DISTANCE
  146:	  008E	02 01 41	    LJMP END_CHECK
  147:
  148:				;----------------------------------------
  149:				; Subroutine: SHOW_DISTANCE
  150:				; Purpose: Map timer value to 1 of 8 distance LEDs
  151:				;----------------------------------------
  152:	  0091			SHOW_DISTANCE:
  153:	  0091	C2 97		    CLR LED_OUT
  154:
  155:				    ; Combine timer value → R1:R0

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:	  0093	E5 8A		    MOV A, TL0
  157:	  0095	F8		    MOV R0, A
  158:	  0096	E5 8C		    MOV A, TH0
  159:	  0098	F9		    MOV R1, A
  160:
  161:				        ; Compute distance = (R1:R0) / 58 → store in R7
  162:	  0099	88 82		    MOV DPL, R0       ; Load low byte
  163:	  009B	89 83		    MOV DPH, R1       ; Load high byte
  164:	  009D	7F 00		    MOV R7, #0        ; Result register = 0
  165:
  166:	  009F			DIV_LOOP:
  167:	  009F	C3		    CLR C
  168:	  00A0	E5 82		    MOV A, DPL
  169:	  00A2	94 58		    SUBB A, #058h
  170:	  00A4	F5 82		    MOV DPL, A
  171:	  00A6	E5 83		    MOV A, DPH
  172:	  00A8	94 00		    SUBB A, #00h
  173:	  00AA	F5 83		    MOV DPH, A
  174:	  00AC	40 03		    JC DIV_DONE
  175:	  00AE	0F		    INC R7
  176:	  00AF	80 EE		    SJMP DIV_LOOP
  177:
  178:	  00B1			DIV_DONE:
  179:				    ; Send "Distance: "
  180:	  00B1	90 01 44	    MOV DPTR, #MSG1
  181:	  00B4	11 22		    ACALL SEND_STRING
  182:
  183:				    ; Send decimal digits from R7
  184:	  00B6	11 2F		    ACALL SEND_DECIMAL
  185:
  186:				    ; Send " cm\r\n"
  187:	  00B8	90 01 4F	    MOV DPTR, #MSG2
  188:	  00BB	11 22		    ACALL SEND_STRING
  189:
  190:				    ; Clear all LEDs
  191:	  00BD	C2 A0		    CLR LED1
  192:	  00BF	C2 A1		    CLR LED2
  193:	  00C1	C2 A2		    CLR LED3
  194:	  00C3	C2 A3		    CLR LED4
  195:	  00C5	C2 A4		    CLR LED5
  196:	  00C7	C2 A5		    CLR LED6
  197:	  00C9	C2 A6		    CLR LED7
  198:	  00CB	C2 A7		    CLR LED8
  199:
  200:				    ; ----- Check: R1:R0 < 580 -----
  201:	  00CD	75 83 02	    MOV DPH, #02h
  202:	  00D0	75 82 44	    MOV DPL, #044h
  203:	  00D3	31 2D		    ACALL CMP16_LT
  204:	  00D5	40 3E		    JC SET_LED1
  205:
  206:				    ; ----- Check: R1:R0 < 1160 -----
  207:	  00D7	75 83 04	    MOV DPH, #04h
  208:	  00DA	75 82 88	    MOV DPL, #088h
  209:	  00DD	31 2D		    ACALL CMP16_LT
  210:	  00DF	40 37		    JC SET_LED2
  211:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:				    ; ----- Check: R1:R0 < 1740 -----
  213:	  00E1	75 83 06	    MOV DPH, #06h
  214:	  00E4	75 82 CC	    MOV DPL, #0CCh
  215:	  00E7	31 2D		    ACALL CMP16_LT
  216:	  00E9	40 30		    JC SET_LED3
  217:
  218:				    ; ----- Check: R1:R0 < 2320 -----
  219:	  00EB	75 83 09	    MOV DPH, #09h
  220:	  00EE	75 82 10	    MOV DPL, #010h
  221:	  00F1	31 2D		    ACALL CMP16_LT
  222:	  00F3	40 29		    JC SET_LED4
  223:
  224:				    ; ----- Check: R1:R0 < 2900 -----
  225:	  00F5	75 83 0B	    MOV DPH, #0Bh
  226:	  00F8	75 82 54	    MOV DPL, #054h
  227:	  00FB	31 2D		    ACALL CMP16_LT
  228:	  00FD	40 22		    JC SET_LED5
  229:
  230:				    ; ----- Check: R1:R0 < 3480 -----
  231:	  00FF	75 83 0D	    MOV DPH, #0Dh
  232:	  0102	75 82 98	    MOV DPL, #098h
  233:	  0105	31 2D		    ACALL CMP16_LT
  234:	  0107	40 1B		    JC SET_LED6
  235:
  236:				    ; ----- Check: R1:R0 < 4060 -----
  237:	  0109	75 83 0F	    MOV DPH, #0Fh
  238:	  010C	75 82 DC	    MOV DPL, #0DCh
  239:	  010F	31 2D		    ACALL CMP16_LT
  240:	  0111	40 14		    JC SET_LED7
  241:
  242:				    ; Else → LED8
  243:	  0113	80 15		    SJMP SET_LED8
  244:
  245:	  0115			SET_LED1:
  246:	  0115	D2 A0		    SETB LED1  ; 0–10cm
  247:	  0117	22		    RET
  248:	  0118			SET_LED2:
  249:	  0118	D2 A1		    SETB LED2  ; 10–20cm
  250:	  011A	22		    RET
  251:	  011B			SET_LED3:
  252:	  011B	D2 A2		    SETB LED3  ; 20–30cm
  253:	  011D	22		    RET
  254:	  011E			SET_LED4:
  255:	  011E	D2 A3		    SETB LED4  ; 30–40cm
  256:	  0120	22		    RET
  257:	  0121			SET_LED5:
  258:	  0121	D2 A4		    SETB LED5  ; 40–50cm
  259:	  0123	22		    RET
  260:	  0124			SET_LED6:
  261:	  0124	D2 A5		    SETB LED6  ; 50–60cm
  262:	  0126	22		    RET
  263:	  0127			SET_LED7:
  264:	  0127	D2 A6		    SETB LED7  ; 60–70cm
  265:	  0129	22		    RET
  266:	  012A			SET_LED8:
  267:	  012A	D2 A7		    SETB LED8  ; >70cm

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268:	  012C	22		    RET
  269:
  270:				;----------------------------------------
  271:				; Subroutine: CMP16_LT
  272:				; Purpose: Compare R1:R0 with DPH:DPL
  273:				; Returns: CY = 1 if R1:R0 < DPH:DPL
  274:				;----------------------------------------
  275:	  012D			CMP16_LT:
  276:	  012D	E9		    MOV A, R1
  277:	  012E	C3		    CLR C
  278:	  012F	95 83		    SUBB A, DPH
  279:	  0131	60 04		    JZ CHECK_LOW
  280:	  0133	40 0A		    JC DONE_LT     ; R1 < DPH
  281:	  0135	80 06		    SJMP DONE_GE   ; R1 > DPH
  282:
  283:	  0137			CHECK_LOW:
  284:	  0137	E8		    MOV A, R0
  285:	  0138	C3		    CLR C
  286:	  0139	95 82		    SUBB A, DPL
  287:	  013B	40 02		    JC DONE_LT     ; R0 < DPL
  288:
  289:	  013D			DONE_GE:
  290:	  013D	C3		    CLR C          ; Greater or equal
  291:	  013E	22		    RET
  292:
  293:	  013F			DONE_LT:
  294:	  013F	D3		    SETB C         ; Less than
  295:	  0140	22		    RET
  296:
  297:
  298:
  299:	  0141			END_CHECK:
  300:	  0141	02 00 60	    LJMP    MAIN_TOGGLE
  301:
  302:	  0144	44 69 73 74	MSG1: DB 'Distance: ', 0
	  0148	61 6E 63 65
	  014C	3A 20 00
  303:	  014F	20 63 6D 0D	MSG2: DB ' cm', 13, 10, 0
	  0153	0A 00
  304:
  305:				END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CHECK_LOW			  CODE	    0137	 283
CMP16_LT			  CODE	    012D	 275
CY				  BIT	      D7
DELAY_10US			  CODE	    0003	  26
DIV_DONE			  CODE	    00B1	 178
DIV_LOOP			  CODE	    009F	 166
DONE_GE				  CODE	    013D	 289
DONE_LT				  CODE	    013F	 293
DONE_STRING			  CODE	    002E	  69
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
END_CHECK			  CODE	    0141	 299
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
GOT_ECHO			  CODE	    0084	 141
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LED1				  NUMBER    00A0	   6
LED2				  NUMBER    00A1	   7
LED3				  NUMBER    00A2	   8
LED4				  NUMBER    00A3	   9
LED5				  NUMBER    00A4	  10
LED6				  NUMBER    00A5	  11
LED7				  NUMBER    00A6	  12
LED8				  NUMBER    00A7	  13
LED_OUT				  NUMBER    0097	  14
MAIN_TOGGLE			  CODE	    0060	 107
MSG1				  CODE	    0144	 302
MSG2				  CODE	    014F	 303
NEXT_CHAR			  CODE	    0025	  62
NO_ECHO				  CODE	    007E	 136
OV				  BIT	      D2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SEND_DECIMAL			  CODE	    002F	  73
SEND_STRING			  CODE	    0022	  60
SET_LED1			  CODE	    0115	 245
SET_LED2			  CODE	    0118	 248
SET_LED3			  CODE	    011B	 251
SET_LED4			  CODE	    011E	 254
SET_LED5			  CODE	    0121	 257
SET_LED6			  CODE	    0124	 260
SET_LED7			  CODE	    0127	 263
SET_LED8			  CODE	    012A	 266
SHOW_DISTANCE			  CODE	    0091	 152
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    003F	  84
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
UART_INIT			  CODE	    000E	  42
UART_SEND			  CODE	    001A	  51
US_ECHO_R			  NUMBER    0090	   5
US_TRIG_R			  NUMBER    0091	   4
WAIT_ECHO_LOW			  CODE	    0066	 115
WAIT_RISE			  CODE	    0073	 128
WAIT_SEND			  CODE	    001C	  53
WR				  BIT	      B6
